sqlSessionFactoryRef = "adminSqlSessionFactory":
This parameter specifies the name of a custom SqlSessionFactory bean to be used for this particular set of Mappers. 
In Spring-based applications, the SqlSessionFactory is responsible for creating the SQL sessions that MyBatis uses to execute SQL statements.

By default, MyBatis provides a SqlSessionFactory that is automatically configured by Spring Boot, but if you need to customize the configuration 
(e.g., different database connections, transaction management, or custom settings), you can define your own SqlSessionFactory bean.


@Configuration
@EnableTransactionManagement
@MapperScan(basePackages = "com.gaptech.sell.pnp.adminportal.dao", 
            sqlSessionFactoryRef = "adminSqlSessionFactory", 
            sqlSessionTemplateRef = "adminSqlSessionTemplate")
public class MyBatisConfig {
    
    @Bean(name = "adminSqlSessionFactory")
    public SqlSessionFactory adminSqlSessionFactory(DataSource dataSource) throws Exception {
        SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();
        factoryBean.setDataSource(dataSource);
        // You can set other custom properties here like configuration files, type aliases, etc.
        return factoryBean.getObject();
    }
}
